Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o (exit)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                              Callbacks.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

ID_bouton           0x1               main.o
My_CB               0x1e              Callbacks.o
tmp_int             0x1               Callbacks.o
ID_clignotement_rapide
                    0x1               main.o
ID_relais           0x1               main.o
My_CB_USART         0x2               Callbacks.o
ID_clignotement     0x1               main.o
buffer              0x32              Callbacks.o
Time_CB             0x1e              Callbacks.o
TICK_CB             0x1e              Callbacks.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
LOAD Callbacks.o
LOAD Hardware.o
LOAD lcd.o
LOAD main.o
LOAD TIMERS.o
LOAD USART.o
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9ee
 *(.vectors)
 .vectors       0x00000000       0x34 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000034                . = ALIGN (0x2)
                0x00000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000034        0x0 linker stubs
 *(.trampolines*)
                0x00000034                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000034                __ctors_start = .
 *(.ctors)
                0x00000034                __ctors_end = .
                0x00000034                __dtors_start = .
 *(.dtors)
                0x00000034                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000034        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
                0x00000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000034        0xc c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000040       0x16 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x00000040                __do_copy_data
 .init4         0x00000056       0x10 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x00000056                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000066        0x4 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
 *(.init9)
 *(.text)
 .text          0x0000006a        0x2 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
                0x0000006a                __vector_22
                0x0000006a                __vector_24
                0x0000006a                __vector_12
                0x0000006a                __bad_interrupt
                0x0000006a                __vector_6
                0x0000006a                __vector_3
                0x0000006a                __vector_23
                0x0000006a                __vector_25
                0x0000006a                __vector_13
                0x0000006a                __vector_17
                0x0000006a                __vector_19
                0x0000006a                __vector_7
                0x0000006a                __vector_5
                0x0000006a                __vector_4
                0x0000006a                __vector_9
                0x0000006a                __vector_2
                0x0000006a                __vector_21
                0x0000006a                __vector_15
                0x0000006a                __vector_8
                0x0000006a                __vector_14
                0x0000006a                __vector_10
                0x0000006a                __vector_16
                0x0000006a                __vector_20
 .text          0x0000006c      0x352 Callbacks.o
                0x0000006c                Callbacks_Init
                0x000000a2                Callbacks_Record_Timer
                0x00000148                Callbacks_Remove_Timer
                0x0000017c                Callbacks_Record_USART
                0x000001a0                Callbacks_Remove_USART
                0x000001b6                callbacks_Start
                0x0000027c                __vector_11
                0x000002f6                __vector_1
                0x00000320                __vector_18
 .text          0x000003be       0x56 Hardware.o
                0x000003be                hardware_Init
 .text          0x00000414      0x45c lcd.o
                0x0000064e                lcd_command
                0x0000066a                lcd_data
                0x00000686                lcd_gotoxy
                0x000006b2                lcd_getxy
                0x000006c6                lcd_clrscr
                0x000006d8                lcd_home
                0x000006ea                lcd_putc
                0x00000716                lcd_puts
                0x00000756                lcd_puts_p
                0x000007a6                lcd_init
 .text          0x00000870       0x5a main.o
                0x00000870                main
                0x000008aa                affichage_USART
 .text          0x000008ca       0x3c TIMERS.o
                0x000008ca                TIMER0_Init_1ms
 .text          0x00000906       0xe4 USART.o
                0x00000906                Usart_Tx
                0x00000926                Usart_Tx_String
                0x00000974                USART_Init_9600
                0x000009c6                USART_Delay
 .text          0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text          0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000009ea                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000009ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009ea        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x000009ea                _exit
                0x000009ea                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009ea        0x4 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000009ee                _etext = .

.data           0x00800100       0x26 load address 0x000009ee
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
 .data          0x00800100        0x0 Callbacks.o
 .data          0x00800100        0x0 Hardware.o
 .data          0x00800100        0x0 lcd.o
 .data          0x00800100       0x25 main.o
                0x00800100                clignotement_rapide_ok
 .data          0x00800125        0x0 TIMERS.o
 .data          0x00800125        0x0 USART.o
 .data          0x00800125        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x00800125        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .data          0x00800125        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800126                . = ALIGN (0x2)
 *fill*         0x00800125        0x1 00
                0x00800126                _edata = .
                0x00800126                PROVIDE (__data_end, .)

.bss            0x00800126       0x96
                0x00800126                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800126        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o
 .bss           0x00800126        0x2 Callbacks.o
                0x00800126                emplacement
                0x00800127                USART_reception_ok
 .bss           0x00800128        0x0 Hardware.o
 .bss           0x00800128        0x0 lcd.o
 .bss           0x00800128        0x1 main.o
                0x00800128                bouton_on
 .bss           0x00800129        0x0 TIMERS.o
 .bss           0x00800129        0x0 USART.o
 .bss           0x00800129        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x00800129        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800129        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800129       0x8f Callbacks.o
                0x00800129                My_CB
                0x00800147                tmp_int
                0x00800148                My_CB_USART
                0x0080014a                buffer
                0x0080017c                Time_CB
                0x0080019a                TICK_CB
 COMMON         0x008001b8        0x4 main.o
                0x008001b8                ID_bouton
                0x008001b9                ID_clignotement_rapide
                0x008001ba                ID_relais
                0x008001bb                ID_clignotement
                0x008001bc                PROVIDE (__bss_end, .)
                0x000009ee                __data_load_start = LOADADDR (.data)
                0x00000a14                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001bc        0x0
                0x008001bc                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001bc                PROVIDE (__noinit_end, .)
                0x008001bc                _end = .
                0x008001bc                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm88.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Callbacks.o
 .debug_aranges
                0x00000020       0x20 Hardware.o
 .debug_aranges
                0x00000040       0x20 lcd.o
 .debug_aranges
                0x00000060       0x20 main.o
 .debug_aranges
                0x00000080       0x20 TIMERS.o
 .debug_aranges
                0x000000a0       0x20 USART.o

.debug_pubnames
                0x00000000      0x326
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x144 Callbacks.o
 .debug_pubnames
                0x00000144       0x24 Hardware.o
 .debug_pubnames
                0x00000168       0x9e lcd.o
 .debug_pubnames
                0x00000206       0xa3 main.o
 .debug_pubnames
                0x000002a9       0x26 TIMERS.o
 .debug_pubnames
                0x000002cf       0x57 USART.o

.debug_info     0x00000000      0x9f2
 *(.debug_info)
 .debug_info    0x00000000      0x327 Callbacks.o
 .debug_info    0x00000327       0x93 Hardware.o
 .debug_info    0x000003ba      0x368 lcd.o
 .debug_info    0x00000722      0x126 main.o
 .debug_info    0x00000848       0x93 TIMERS.o
 .debug_info    0x000008db      0x117 USART.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x414
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xf5 Callbacks.o
 .debug_abbrev  0x000000f5       0x4c Hardware.o
 .debug_abbrev  0x00000141      0x17c lcd.o
 .debug_abbrev  0x000002bd       0x81 main.o
 .debug_abbrev  0x0000033e       0x4c TIMERS.o
 .debug_abbrev  0x0000038a       0x8a USART.o

.debug_line     0x00000000      0xb2e
 *(.debug_line)
 .debug_line    0x00000000      0x2bb Callbacks.o
 .debug_line    0x000002bb       0xf8 Hardware.o
 .debug_line    0x000003b3      0x443 lcd.o
 .debug_line    0x000007f6       0xd5 main.o
 .debug_line    0x000008cb       0xee TIMERS.o
 .debug_line    0x000009b9      0x175 USART.o

.debug_frame    0x00000000      0x270
 *(.debug_frame)
 .debug_frame   0x00000000       0xa0 Callbacks.o
 .debug_frame   0x000000a0       0x20 Hardware.o
 .debug_frame   0x000000c0      0x110 lcd.o
 .debug_frame   0x000001d0       0x30 main.o
 .debug_frame   0x00000200       0x20 TIMERS.o
 .debug_frame   0x00000220       0x50 USART.o

.debug_str      0x00000000      0x3b4
 *(.debug_str)
 .debug_str     0x00000000      0x1b1 Callbacks.o
                                0x1ea (size before relaxing)
 .debug_str     0x000001b1       0x1e Hardware.o
                                 0xe8 (size before relaxing)
 .debug_str     0x000001cf      0x103 lcd.o
                                0x1d2 (size before relaxing)
 .debug_str     0x000002d2       0x79 main.o
                                0x145 (size before relaxing)
 .debug_str     0x0000034b       0x1e TIMERS.o
                                 0xe8 (size before relaxing)
 .debug_str     0x00000369       0x4b USART.o
                                0x12a (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(usart_lcd_adc_callback.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0xc2
 .debug_pubtypes
                0x00000000       0x1e Callbacks.o
 .debug_pubtypes
                0x0000001e       0x1e Hardware.o
 .debug_pubtypes
                0x0000003c       0x2b lcd.o
 .debug_pubtypes
                0x00000067       0x12 main.o
 .debug_pubtypes
                0x00000079       0x1e TIMERS.o
 .debug_pubtypes
                0x00000097       0x2b USART.o
